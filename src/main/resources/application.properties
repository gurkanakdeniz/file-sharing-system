# ===============================
# = FILE 
# ===============================
#spring.servlet.multipart.max-file-size=-1
#spring.servlet.multipart.max-request-size=-1
#spring.http.multipart.enabled=false
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=500MB
# Max Request Size
spring.servlet.multipart.max-request-size=515MB

# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url = jdbc:mysql://localhost:3306/SHAF
#spring.datasource.username = spaceorder
#spring.datasource.password = smile
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = SQLite
# ===============================

spring.datasource.url = jdbc:sqlite:shaf.db
spring.datasource.driver-class-name = org.sqlite.JDBC
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLiteDialect
spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.hibernate.hbm2ddl.auto = validate

#spring.hibernate.connection.driver_class = org.sqlite.JDBC
spring.hibernate.cache.provider_class = org.hibernate.cache.NoCacheProvider


# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

#server.error.whitelabel.enabled=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

